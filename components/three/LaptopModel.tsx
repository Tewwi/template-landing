"use-client";
import { Html, useGLTF } from "@react-three/drei";
import * as THREE from "three";
// import { Team } from "../team";
// import Testimonial from "../testimonial";
import { useMemo } from "react";
import LaptopContent from "../LaptopContent";

export function LaptopModel() {
  // Load model
  const { nodes, materials } = useGLTF("/models/mac_draco.glb");
  // const [currentPage] = useAtom(currentPageAtom);
  const content = useMemo(() => <LaptopContent />, []);

  // useEffect(() => {
  //   if (currentPage === "member") {
  //     const event = setTimeout(() => {
  //       setIsShow(true);
  //     }, 1600);

  //     return () => clearTimeout(event);
  //   }
  // }, [currentPage]);

  // The jsx graph was auto-generated by: https://github.com/pmndrs/gltfjsx
  return (
    <group
      scale={0.2}
      rotation-y={THREE.MathUtils.degToRad(25)}
      position={[-1, 0.09, -3.2]}
    >
      <group rotation-x={-0.425} position={[0, -0.04, 0.48]}>
        <group position={[0, 2.96, -0.13]} rotation={[Math.PI / 2, 0, 0]}>
          <mesh
            material={materials.aluminium}
            geometry={(nodes["Cube008"] as THREE.Mesh).geometry}
          />
          <mesh
            material={materials["matte.001"]}
            geometry={(nodes["Cube008_1"] as THREE.Mesh).geometry}
          />
          <mesh geometry={(nodes["Cube008_2"] as THREE.Mesh).geometry}>
            {/* Drei's HTML component can "hide behind" canvas geometry */}
            <Html
              className="overflow-auto max-h-[550px]"
              rotation-x={-Math.PI / 2}
              position={[0, 0.05, -0.09]}
              transform
              occlude={false}
              scale={0.42}
              distanceFactor={10}
              zIndexRange={[1, 0]}
              as="div"
            >
              <div
                className="wrapper"
                onPointerDown={(e) => e.stopPropagation()}
              >
                {content}
              </div>
            </Html>
          </mesh>
        </group>
      </group>
      <mesh
        material={materials.keys}
        geometry={(nodes.keyboard as THREE.Mesh).geometry}
        position={[1.79, 0, 3.45]}
      />
      <group position={[0, -0.1, 3.39]}>
        <mesh
          material={materials.aluminium}
          geometry={(nodes["Cube002"] as THREE.Mesh).geometry}
        />
        <mesh
          material={materials.trackpad}
          geometry={(nodes["Cube002_1"] as THREE.Mesh).geometry}
        />
      </group>
      <mesh
        material={materials.touchbar}
        geometry={(nodes.touchbar as THREE.Mesh).geometry}
        position={[0, -0.03, 1.2]}
      />
    </group>
  );
}
